-FunctionDecl
getSum
int (int, int)
-ParmVarDecl
a
int
-ParmVarDecl
b
int
-CompoundStmt
-ReturnStmt
-BinaryOperator
+
-DeclRefExpr
a
-DeclRefExpr
b
+
-Blend
-FunctionDecl
main
int ()
-CompoundStmt
-DeclStmt
-VarDecl
i0
int
-DeclStmt
-VarDecl
i1
int
-BinaryOperator
=
-DeclRefExpr
i0
-IntegerLiteral
5
-BinaryOperator
=
-DeclRefExpr
i1
-BinaryOperator
-
-BinaryOperator
*
-DeclRefExpr
i0
-IntegerLiteral
2
i
1
-subs
i
0
-subs
2
*
i
0
-subs
~
6
1
~
*
+
+
=


b
bool
b
true
=
b1
bool
b1
b
b
||
true
&&
=
i
0
-subs
5
==
label1
-jz
ch
char
ch
-read
ch
-print
label2
-jmp
label1
-defl
ch
char
ch
'a'
=
ch
-print
label2
-defl
true
label3
-jz
getSum
i
0
-subs
i
1
-subs
2
-call
-print
label3
-defl
label4
-defl
i
1
-subs
15
<
label5
-jz
i
1
-subs
i
1
-subs
1
+
=
label4
-jmp
label5
-defl
-blend
